[project]
name = "ccwatch"
version = "0.1.0"
description = "ClaudeCode log viewer with DuckDB"
readme = "README.md"
requires-python = ">=3.9"
dependencies = [
    "streamlit>=1.30.0",
    "duckdb>=0.10.0",
    "plotly>=5.0.0",
    "watchdog>=6.0.0",
    "streamlit-autorefresh>=1.0.1",
]

[project.optional-dependencies]
test = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.23.0",
    "pytest-cov>=4.0.0",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v"

[tool.coverage.run]
source = ["src"]
omit = ["*/tests/*", "*/__pycache__/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if __name__ == .__main__.:",
    "raise AssertionError",
    "raise NotImplementedError",
]

[dependency-groups]
dev = [
    "ruff>=0.12.1",
]

[tool.ruff]
# 1行の最大文字数
line-length = 120

# Python バージョン
target-version = "py39"

[tool.ruff.lint]
# 有効にするルールセット
select = [
    "E",      # pycodestyle エラー
    "F",      # pyflakes
    "UP",     # pyupgrade
    "B",      # flake8-bugbear
    "SIM",    # flake8-simplify
    "I",      # isort
    "N",      # pep8-naming
    "TID",    # flake8-tidy-imports
    "RUF",    # Ruff特有のルール
    "PT",     # flake8-pytest-style
    "ERA",    # eradicate (コメントアウトされたコード)
    "PD",     # pandas-vet
    "PGH",    # pygrep-hooks
    "PL",     # pylint
    "NPY",    # NumPy特有のルール
]

# 無視するルール
ignore = [
    "E501",   # 行の長さ (line-lengthで制御)
    "PD901",  # pandas df変数名
    "PLR0913", # 引数が多すぎる
    "PLR0915", # ステートメントが多すぎる
]

# ディレクトリごとの設定
[tool.ruff.lint.per-file-ignores]
"tests/*" = [
    "S101",    # テストでのassert使用を許可
    "PLR2004", # マジックナンバーの使用を許可
    "PLC0415", # import文の位置（テストでは必要に応じて）
]

[tool.ruff.lint.isort]
# import文のグループ化設定
known-first-party = ["src"]

[tool.ruff.format]
# ダブルクォートを使用
quote-style = "double"

# インデントはスペース4つ
indent-style = "space"

# 末尾カンマの設定
skip-magic-trailing-comma = false
